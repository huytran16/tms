@using AMS.Constant
@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = "ManageReipt";
    Layout = "~/Views/Management/__ManagementLayout.cshtml";
    List<Block> block = ViewBag.block;
    List<House> firstBlockFloor = ViewBag.firstBlockFloor;
    List<House> rooms = ViewBag.rooms;
    Receipt receipt = ViewBag.receipt;

    string forMonth = ViewBag.forMonthOfBls;
    string forMonthView = ViewBag.forMonthViewOfBls;
}

<div class="col-md-12">
    <div class="panel panel-default">
        <div class="panel-body">

            <div class="heading-tab">
                <span class="tab-location"><i class="fa fa-sitemap" aria-hidden="true"></i> Chi tiết hóa đơn</span>

                <ul class="nav nav-tabs pull-right" role="tablist">
                    <li class="active">
                        <a href="/Management/ManageReceipt/View"><i class="fa fa-file-text-o"></i> Quản lý hóa đơn</a>
                    </li>
                    <li>
                        <a href="/Management/ManageReceipt/CreateManualReceiptView"><i class="fa fa-file-o"></i> Tạo hóa đơn lẻ</a>
                    </li>
                    <li class="">
                        <a href="/Management/ManageReceipt/CreateAutomationReceiptView"><i class="fa fa-files-o"></i> Tạo hóa đơn hàng loạt</a>
                    </li>
                    <li class="">
                        <a href="/Management/ManageReceipt/ViewDownloadRecordTemplate"><i class="fa fa-cloud-download"></i> Tải bảng ghi nước</a>
                    </li>
                </ul>
            </div>

            <div class="tab-content">
                <div class="tab-pane fade active in" id="">

                    <form id="updateOrder" class="form-horizontal" data-receiptid="@receipt.Id" data-fromuserid="@User.Identity.GetUserId()" role="form">

                        <div class="alert alert-info" id="createReceiptSuccessNoti" style="display: none">
                            <a class="close" data-dismiss="alert" aria-label="close">&times;</a>
                            <span id="successMsg">Cập nhật thành công</span>
                        </div>
                        <div class="alert alert-danger" id="createReceiptFailedNoti" style="display: none">
                            <a href="#" class="close" data-dismiss="alert" aria-label="close">×</a>
                            <span>Cập nhật thất bại</span>
                        </div>
                        <div class="alert alert-danger" id="msgAddFailedNoty" style="display: none">
                            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                            <span id="notyMsg"></span>
                        </div>

                        <div class="form-group">
                            <div class="col-md-8">
                                <fieldset class="scheduler-border less-padding">
                                    <legend class="scheduler-border bold-black">Thông tin hóa đơn</legend>
                                    <div class="form-group">
                                        <label for="receiptTitle" class="col-md-2 control-label">Tiêu đề</label>
                                        <div class="col-md-10">
                                            <input id="receiptTitle" name="ReceiptTitle" value="@receipt.Title" type="text" class="form-control">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="houseBlock" class="col-md-2 control-label">Tòa nhà</label>
                                        <div class="col-md-3 full-width-select">
                                            <select id="houseBlock" name="select" class="form-control">
                                                @{
                                                    foreach (var b in block)
                                                    {
                                                        if (b.Id.Equals(receipt.House.Block.Id))
                                                        {
                                                            <option selected="selected" value="@b.Id">@b.BlockName</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="@b.Id">@b.BlockName</option>
                                                        }
                                                    }
                                                }
                                            </select>
                                        </div>
                                        <label for="houseFloor" class="col-md-1 control-label">Tầng</label>
                                        <div class="col-md-2">
                                            <select id="houseFloor" name="select" class="form-control">
                                                @{
                                                    foreach (var f in firstBlockFloor)
                                                    {
                                                        if (f.Floor.Equals(receipt.House.Floor))
                                                        {
                                                            <option selected="selected" value="@f.Floor">@f.Floor</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="@f.Floor">@f.Floor</option>
                                                        }
                                                    }
                                                }
                                            </select>
                                        </div>
                                        <label for="houseId" class="col-md-1 control-label">Nhà</label>
                                        <div class="col-md-3">
                                            <select id="houseId" name="select" class="form-control">
                                                @{
                                                    foreach (var r in firstBlockFloor)
                                                    {
                                                        if (r.HouseName.Equals(receipt.House.HouseName))
                                                        {
                                                            <option selected="selected" value="@r.Id">@r.HouseName</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="@r.Id">@r.HouseName</option>
                                                        }
                                                    }
                                                }
                                            </select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="houseBlock" class="col-md-2 control-label">Tháng</label>
                                        <div class="col-md-3">
                                            <input type="text" id="forMonthView" value="@forMonthView" class="form-control" readonly="readonly" />
                                            <input type="hidden" id="forMonth" value="@forMonth" name="ForMonth" readonly="readonly" />
                                        </div>
                                        <label for="houseBlock" class="col-md-2 control-label">Trạng thái</label>
                                        <div class="col-md-3">
                                            @{
                                                if (receipt.Status == SLIM_CONFIG.RECEIPT_STATUS_PAID)
                                                {
                                                    <span class="btn btn-success">Đã thanh toán</span>
                                                }
                                                else if (receipt.Status == SLIM_CONFIG.RECEIPT_STATUS_UNPAID)
                                                {
                                                    <span id="unPaid" class="btn btn-danger">Chưa thanh toán</span>
                                                    <span id="paid" class="btn btn-success hide">Đã thanh toán</span>
                                                }
                                                else if (receipt.Status == SLIM_CONFIG.RECEIPT_STATUS_UNPUBLISHED)
                                                {
                                                    <span id="unpublished" class="btn btn-inverse">Chưa công bố</span>
                                                    <span id="unPaid" class="btn btn-danger hide">Chưa thanh toán</span>
                                                    <span id="paid" class="btn btn-success hide">Đã thanh toán</span>
                                                }
                                            }
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="receiptDesc" class="col-md-2 control-label">Mô tả</label>
                                        <div class="col-md-10">
                                            <textarea id="receiptDesc" name="ReceiptDesc" class="form-control" rows="3">@receipt.Description</textarea>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group" style="    margin-bottom: 10px;">
                                    <fieldset class="scheduler-border less-padding">
                                        <legend class="scheduler-border bold-black">Người tạo</legend>
                                        <div class="form-group">
                                            <label for="houseBlock" class="col-md-4 control-label">Thành viên</label>
                                            <div class="col-md-8">
                                                <input readonly="readonly" value="@receipt.User.Fullname" id="creator" type="text" class="form-control">
                                            </div>
                                        </div>
                                    </fieldset>
                                </div>
                                <div class="form-group">
                                    <fieldset class="scheduler-border less-padding">
                                        <legend class="scheduler-border bold-black">Thời gian</legend>
                                        <div class="form-group">
                                            <label for="publishDate" class="col-md-4 control-label">Công bố</label>
                                            <div class="col-md-8">
                                                @{
                                                    string date = receipt.PublishDate.Value.ToString(AmsConstants.DateFormat);
                                                }
                                                <input type="text" id="publishDate" value="@date" name="PublishDate" class="form-control datepicker" data-date-format="dd-mm-yyyy" data-date-language="vi"
                                                       data-date-min-view-mode="0" data-date-today-highlight="true" data-date-start-date="0d" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label for="paidDate" class="col-md-4 control-label">Thanh toán</label>
                                            <div class="col-md-8">
                                                @{
                                                    string paidDateStr = "";
                                                    if (null == receipt.PaymentDate)
                                                    {
                                                        paidDateStr = "Chưa thanh toán";
                                                    }
                                                    else
                                                    {
                                                        paidDateStr = receipt.PaymentDate.Value.ToString(AmsConstants.DateTimeFormat);
                                                    }
                                                }
                                                <input id="paidDate" readonly="readonly" type="text" value="@paidDateStr" class="form-control">
                                            </div>
                                        </div>
                                    </fieldset>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <fieldset class="scheduler-border less-padding">
                                <legend class="scheduler-border bold-black">Chi tiết hóa đơn</legend>
                                <div class="form-group">
                                    <div class="col-sm-5">
                                        <strong style="align-content: center">Tên</strong>
                                    </div>
                                    <div class="col-sm-2">
                                        <strong style="align-content: center">Số lượng</strong>
                                    </div>
                                    <div class="col-sm-2">
                                        <strong style="align-content: center">Đơn giá</strong>
                                    </div>
                                    <div class="col-sm-2">
                                        <strong style="align-content: center">Thành tiền</strong>
                                    </div>
                                </div>
                                <div id="receiptWrapper">
                                    @{
                                        int index = 0;
                                        double total = 0;
                                        double qtyPrice = 0;
                                        foreach (var detail in receipt.ReceiptDetails)
                                        {
                                            {
                                                index++;
                                            }

                                            <div id="row_@index" class="form-group">
                                                <div class="col-sm-5">
                                                    <input id="item_name_@index" value="@detail.UtilityService.Name" name="order-item-name" type="text" class="form-control order-item">
                                                </div>
                                                <div class="col-sm-2">
                                                    <input id="item_qty_@index" value="@detail.Quantity.Value.ToString("N0")" name="order-item-qty" type="text" class="form-control order-item-qty">
                                                </div>
                                                <div class="col-sm-2">
                                                    <input id="item_unit_price_@index" value="@detail.UnitPrice.Value.ToString("N0")" name="order-item-price" type="text" class="form-control order-item-price">
                                                </div>
                                                <div class="col-sm-2">
                                                    @{qtyPrice = (detail.UnitPrice * detail.Quantity).Value;}
                                                    <input id="item_qty_price_@index" readonly="readonly" value="@qtyPrice.ToString("N0")" name="" type="text" class="form-control total-order">
                                                </div>
                                                @{if (receipt.Status == SLIM_CONFIG.RECEIPT_STATUS_UNPUBLISHED)
                                                {
                                                    <span class="btn btn-danger btn-xs rmv-order-item" onclick="deleteItem(@index)"><i class="fa fa-times"></i></span>
                                                }
                                                }

                                                <input type="hidden" id="item_id_@index" value="@detail.Id" name="" />
                                            </div>
                                                {
                                                    total += (detail.UnitPrice * detail.Quantity).Value;
                                                }
                                        }
                                    }
                                </div>
                                <div class="form-group">
                                    <div class="col-sm-3">
                                        @{
                                            if (receipt.Status == SLIM_CONFIG.RECEIPT_STATUS_UNPUBLISHED)
                                            {
                                                <span id="addNewRow" name="addNewRow" class="btn btn-stroke btn-primary"><i class="fa fa-plus"> Thêm</i></span>
                                            }
                                        }

                                    </div>
                                </div>
                                <div class="form-group" style="font-size: 20px; text-align: right">
                                    <div class="col-md-offset-7 col-md-2">
                                        <strong style="align-content: center">Tổng</strong>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="input-group">
                                            <input id="total" class="form-control" value="@total.ToString("N0")" />
                                            <span class="input-group-addon">đồng</span>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                        </div>
                        <div class="form-group">
                            <div class="pull-right">
                                @{if (receipt.Status == SLIM_CONFIG.RECEIPT_STATUS_UNPUBLISHED)
                                {
                                    <span id="btnPublished" onclick="changeStatusReceipt(@receipt.Id, @User.Identity.GetUserId(), @SLIM_CONFIG.RECEIPT_STATUS_UNPAID)" class="btn btn-info"><i class="fa fa-globe"></i> Công bố</span>
                                    <button type="submit" id="btnUpdate" class="btn btn-primary"><i class="fa fa-pencil"></i> Cập nhật</button>
                                    <span id="btnPaid" onclick="changeStatusReceipt(@receipt.Id,    @User.Identity.GetUserId(),
                                          @SLIM_CONFIG.RECEIPT_STATUS_PAID )" class="btn btn-success hide">
                                        <i class="fa fa-check"></i> Thanh toán
                                    </span>
                                }
                                else if (receipt.Status == SLIM_CONFIG.RECEIPT_STATUS_UNPAID)
                                {
                                    <span id="btnPaid" onclick="changeStatusReceipt(@receipt.Id,    @User.Identity.GetUserId(),
                                          @SLIM_CONFIG.RECEIPT_STATUS_PAID )" class="btn btn-success">
                                        <i class="fa fa-check"></i> Thanh toán
                                    </span>
                                }
                                }
                            </div>
                        </div>
                        <input type="hidden" id="userId" value="@User.Identity.GetUserId()" />
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function() {
        window.index = (@index);
        $("#addNewRow").on("click", function () {
            window.index++;
            var tag = "<div id=\"row_" + index + "\" class='form-group'>" +
                            "<div class='col-sm-5'><input id=\"item_name_" + index + "\" type='text' name='order-item-name' class='form-control order-item'></div>" +
                            "<div class='col-sm-2'><input type='text' id=\"item_qty_" + index + "\" name='order-item-qty' class='form-control order-item-qty'></div>" +
                            "<div class='col-sm-2'><input id=\"item_unit_price_" + index + "\"type='text' name='order-item-price' class='form-control order-item-price'></div>" +
                            "<div class='col-sm-2'><input id=\"item_qty_price_" + index + "\" type='text' readonly='readonly' class='form-control'></div>" +
                            "<input type='hidden' id=\"" + "item_id_" + index + "\" value='0'  />" +
                            "<span class='btn btn-danger btn-xs' onclick='deleteItem(\"" + index + "\")'><i class='fa fa-times'></i></span>" +
                        "</div>";
            $("#receiptWrapper").append(tag);
        });
        //        bindingClassNumberWithComma("order-item-price");
        bindingCalculateSubTotal();
        validCreateManualReceipt();
    });
    function deleteItem(id) {
        $("#row_" + id)[0].parentNode.removeChild($("#row_" + id)[0]);
    }

    function updateReceipt(fromUserId) {
        var contentObj = $("#receiptWrapper > .form-group");
        var numberOfRow = contentObj.length;
        var receiptName = $("#receiptTitle").val();
        var receiptDesc = $("#receiptDesc").val();
        var receiptHouseId = $("#houseId").val();
        var forMonth = $("#forMonth").val();
        var publishDate = $("#publishDate").val();
        var receiptId = document.getElementById("updateOrder").dataset.receiptid;
        var userId = fromUserId;

        var listItem = [];
        if (numberOfRow !== 0) {
            for (var i = 0; i < numberOfRow; i++) {
                var rowIdStr = $(contentObj[i]).prop("id").split("row_");
                var id = rowIdStr[1];
                var name = $("#item_name_" + id).val();
                var qty = $("#item_qty_" + id).val();
                var unitPrice = replaceCommaNumber($("#item_unit_price_" + id).val());
                var receipDetailId = $("#item_id_" + id).val();
                if (name && qty && unitPrice) {
                    var item = {
                        RecDetailId: receipDetailId,
                        Name: name,
                        UnitPrice: unitPrice,
                        Quantity: qty
                    };
                    listItem.push(item);
                }
            }
        }

        var orderItem = {
            Creator: userId,
            ReceiptId: receiptId,
            ForMonth: forMonth,
            ReceiptTitle: receiptName,
            ReceiptDesc: receiptDesc,
            PublishDate: publishDate,
            ReceiptHouseId: receiptHouseId,
            ListItem: listItem
        };

        $.ajax({
            type: "POST",
            url: "/Management/ManageReceipt/UpdateReceipt",
            data: $.param(orderItem),
            success: function (data) {
                smoothScrollToTop();
                if (data.StatusCode === 0) {
                    if (data.Data.publishDate) {
                        $("#unpublished").addClass("hide");
                        $("#btnUpdate").remove();
                        $("#btnPublished").addClass("hide");

                        $("#unPaid").removeClass("hide");
                        $("#btnPaid").removeClass("hide");
                        $(".rmv-order-item").addClass("hide");
                        $("#addNewRow").addClass("hide");
                        $("#publishDate").val(data.Data.publishDate);
                    }
                    $("#createReceiptSuccessNoti").fadeIn("fast");
                    setTimeout(function () {
                        $("#createReceiptSuccessNoti").fadeOut("fast");
                        resetFromNotField();
                    }, 3000);
                    $("#receiptWrapper").load("/Management/ManageReceipt/ReceiptDetailItemList?receiptId="+ document.getElementById("updateOrder").dataset.receiptid);
                } else if (data.StatusCode === 5) {
                    $("#successMsg").text("Hóa đơn được xóa thành cộng. Đang chuyển về trang quản lý hóa đơn");
                    $("#createReceiptSuccessNoti").fadeIn("fast");
                    setTimeout(function () {
                        $("#createReceiptSuccessNoti").fadeOut("fast");
                        location.href = "/Management/ManageReceipt/View";
                    }, 3000);
                }else if (data.StatusCode === 4) {
                    var msg = "Bảng thu chi của tháng <strong>" + $("#forMonthView").val() + "</strong> đã đóng. Xin nhập lại tháng khác.";
                    $("#notyMsg").html(msg);
                    $("#msgAddFailedNoty").fadeIn("fast");
                    setTimeout(function() {
                        $("#msgAddFailedNoty").fadeOut("fast");
                    }, 3000);
                } else if (data.StatusCode === 5) {
                    var msg = "Không tìm thấy bảng thu chi";
                    $("#notyMsg").html(msg);
                    $("#msgAddFailedNoty").fadeIn("fast");
                    setTimeout(function() {
                        $("#msgAddFailedNoty").fadeOut("fast");
                    }, 3000);
                }else {
                    $("#createReceiptFailedNoti").fadeIn("fast");
                    setTimeout(function () {
                        $("#createReceiptFailedNoti").fadeOut("fast");
                    }, 3000);
                }
            },
            error: function () {
            }
        });
    }
    function changeStatusReceipt(receiptId,userId, mode) {
        $.ajax({
            type: "get",
            url: "/Management/ManageReceipt/UpdateStatus",
            data: {
                ReceiptId: receiptId,
                Status: mode,
                UserId: userId
            },
            success: function(data) {
                if (data.StatusCode !== -1) {
                    if (data.Data.publishDate) {
                        $("#unpublished").addClass("hide");
                        $("#btnUpdate").remove();
                        $("#btnPublished").addClass("hide");

                        $("#unPaid").removeClass("hide");
                        $("#btnPaid").removeClass("hide");
                        $(".rmv-order-item").addClass("hide");
                        $("#addNewRow").addClass("hide");
                        $("#publishDate").val(data.Data.publishDate);
                    } else {
                        $("#unPaid").addClass("hide");
                        $("#paid").removeClass("hide");
                        $("#btnPaid").addClass("hide");
                        $("#paidDate").val(data.Data.paymentDate);
                    }
                } else {
                    $("#createReceiptFailedNoti").fadeIn("fast");
                    setTimeout(function () {
                        $("#createReceiptFailedNoti").fadeOut("fast");
                    }, 3000);
                }
            }
        });
    }
    function resetFromNotField(id) {
        $("#createNewOrder").closest("form").find("input[type=text]:not(#forMonthView,#receiptType), textarea").val("");
    }
    function validCreateManualReceipt() {
        $("#updateOrder").validate({
            rules: {
                ReceiptTitle: {
                    required: true,
                    maxlength: 255
                },
                PublishDate: {
                    required: true
                },
                ReceiptDesc: {
                    maxlength: 1000
                },
                "order-item-name": {
                    required: function (elem) {
                        if ($(elem).val()&& $(elem).val().trim().length < 255) {
                            return false;
                        } else {
                            return true;
                        }
                    }
                },
                "order-item-qty": {
                    required: function (elem) {
                        if ($(elem).val()) {
                            return false;
                        } else {
                            return true;
                        }
                    }
                },
                "order-item-price": {
                    required: function (elem) {
                        if ($(elem).val()) {
                            return false;
                        } else {
                            return true;
                        }
                    }
                },

            },
            messages: {
                ReceiptTitle: {
                    required: "Trường bắt buộc",
                    maxlength: "Tối đa 255 ký tự."
                },
                PublishDate: {
                    required: "Trường bắt buộc"
                },
                ReceiptDesc: {
                    maxlength: "Tối đa 1000 ký tự."
                },
                "order-item-name": {
                    required: "Trường bắt buộc và tối đa 255 ký tự",
                    //                    maxlength: "Tối đa 255 ký tự."
                },
                "order-item-qty": {
                    required: "Trường bắt buộc",
                },
                "order-item-price": {
                    required: "Trường bắt buộc",
                },

            },
            submitHandler: function () {
                if ($("#btnUpdate").length && (!$("#btnUpdate").hasClass("hide"))) {
                    var fromUserId = $("#userId").val();
                    updateReceipt(fromUserId);
                }
            }
        });
    }
</script>